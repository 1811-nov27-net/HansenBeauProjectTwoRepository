<Activity mc:Ignorable="sap sap2010 sads" x:Class="MainFlowchart" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="MainFlowchart_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:p="http://schemas.uipath.com/workflow/activities/word"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="ProjectFlowchart" sap2010:WorkflowViewState.IdRef="Flowchart_8">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="username" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Orders" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Address" />
      <Variable x:TypeArguments="ss:SecureString" Name="securePasswordString" />
      <Variable x:TypeArguments="x:Int32" Name="retry" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="retryVerdict" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="unsuccessfulOrdersList" />
      <Variable x:TypeArguments="x:String" Name="emailBody" />
      <Variable x:TypeArguments="x:String" Name="emailSubject" />
      <Variable x:TypeArguments="x:Boolean" Name="exceptionBreak" />
      <Variable x:TypeArguments="x:String" Name="orderNumberParse" />
      <Variable x:TypeArguments="x:String" Name="billingFirstName" />
      <Variable x:TypeArguments="x:String" Name="billingLastName" />
      <Variable x:TypeArguments="x:String" Name="billingZIP" />
      <Variable x:TypeArguments="x:String" Name="billingStreetAddress" />
      <Variable x:TypeArguments="x:String" Name="shippingFirstName" />
      <Variable x:TypeArguments="x:String" Name="shippingLastName" />
      <Variable x:TypeArguments="x:String" Name="shippingStreetAddress" />
      <Variable x:TypeArguments="x:String" Name="shippingZIP" />
      <Variable x:TypeArguments="x:String" Name="subTotal" />
      <Variable x:TypeArguments="x:String" Name="orderNumber" />
      <Variable x:TypeArguments="x:String" Name="subTotalRet" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID33" sap2010:WorkflowViewState.IdRef="FlowStep_143">
        <Flowchart DisplayName="Get Assets and Credentials" sap2010:WorkflowViewState.IdRef="Flowchart_35">
          <Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_163">
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File - GetAssestsAndCredentials" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="GetAssestsAnCredentials.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="x:String" x:Key="username">[username]</OutArgument>
                  <OutArgument x:TypeArguments="ss:SecureString" x:Key="securePasswordString">[securePasswordString]</OutArgument>
                  <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="unsuccessfulOrdersList">[unsuccessfulOrdersList]</OutArgument>
                  <OutArgument x:TypeArguments="x:Boolean" x:Key="exceptionBreak">[exceptionBreak]</OutArgument>
                  <OutArgument x:TypeArguments="x:Int32" x:Key="retry">[retry]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </FlowStep>
          </Flowchart.StartNode>
          <x:Reference>__ReferenceID0</x:Reference>
        </Flowchart>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID32" sap2010:WorkflowViewState.IdRef="FlowStep_142">
            <Flowchart DisplayName="Read/ Store Product Details" sap2010:WorkflowViewState.IdRef="Flowchart_36">
              <Flowchart.StartNode>
                <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_164">
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ReadStoreProductDetail.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Orders">[dt_Orders]</OutArgument>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt_Address">[dt_Address]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </FlowStep>
              </Flowchart.StartNode>
              <x:Reference>__ReferenceID1</x:Reference>
            </Flowchart>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID31" sap2010:WorkflowViewState.IdRef="FlowStep_141">
                <Flowchart DisplayName="Login to Pega" sap2010:WorkflowViewState.IdRef="Flowchart_37">
                  <Flowchart.StartNode>
                    <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_165">
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="LoginToPega.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="username">[username]</InArgument>
                          <InArgument x:TypeArguments="ss:SecureString" x:Key="securePasswordString">[securePasswordString]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_Orders">[dt_Orders]</InArgument>
                          <OutArgument x:TypeArguments="x:Boolean" x:Key="exceptionBreak">[exceptionBreak]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </FlowStep>
                  </Flowchart.StartNode>
                  <x:Reference>__ReferenceID2</x:Reference>
                </Flowchart>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID34" Condition="[exceptionBreak]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID20" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                        <Flowchart DisplayName="Update Product Detail.xlsx" sap2010:WorkflowViewState.IdRef="Flowchart_7">
                          <Flowchart.StartNode>
                            <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_170">
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="UpdateProductDetail.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <OutArgument x:TypeArguments="x:String" x:Key="orderNumber">[orderNumber]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="subTotalRet">[subTotalRet]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </FlowStep>
                          </Flowchart.StartNode>
                          <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_144">
                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - Write Successful Orders" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" WorkbookPath="Accessory Files\Orders2.xlsx">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_154">
                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_141">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="sd:DataTable" Name="dt_Orders2" />
                                        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="orderNumberGet" />
                                        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="unitPriceGet" />
                                        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="totalPriceGet" />
                                        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="subTotalGet" />
                                      </Sequence.Variables>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_Orders2]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" SheetName="Orders">
                                        <ui:ExcelReadRange.Range>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:ExcelReadRange.Range>
                                      </ui:ExcelReadRange>
                                      <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items - orderNumber" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New" QueueName="OrderNumberQueue" Result="[orderNumberGet]" Top="1" />
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_90">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[orderNumber]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[orderNumberGet.ElementAt(0).SpecificContent("orderNumberParse").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="Info" Message="[&quot;orderNumber retreived as &quot; + orderNumber]" />
                                      <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items - subTotal" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" QueueItemStates="New" QueueName="SubTotalQueue" Result="[subTotalGet]" Top="1" />
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_91">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[subTotalRet]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[subTotalGet.ElementAt(0).SpecificContent("subTotal").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items - unitPrice" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_3" QueueItemStates="New" QueueName="UnitPriceQueue" Result="[unitPriceGet]" />
                                      <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items - totalPrice" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_4" QueueItemStates="New" QueueName="TotalPriceQueue" Result="[totalPriceGet]" />
                                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_Orders2]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_140">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="writeCellStatusSuc" />
                                              </Sequence.Variables>
                                              <If Condition="[row(3).ToString.Equals(string.Empty)]" sap2010:WorkflowViewState.IdRef="If_4">
                                                <If.Then>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_139">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:String" Name="writeCellNotesSuc" />
                                                      <Variable x:TypeArguments="x:String" Name="writeCellUnitPrice" />
                                                      <Variable x:TypeArguments="x:String" Name="writeCellTotalPrice" />
                                                      <Variable x:TypeArguments="x:String" Name="prodName2" />
                                                      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="unitPriceRet" />
                                                      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="totalPriceRet" />
                                                    </Sequence.Variables>
                                                    <Assign DisplayName="Assign - prodName" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[prodName2]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Assign - writeCellStatusSuc" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[writeCellStatusSuc]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">["C" + (dt_Orders2.Rows.IndexOf(row) + 2).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message - writeCellStatusSuc" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Info" Message="[&quot;writeCellStatusSuc is set as &quot; + writeCellStatusSuc]" />
                                                    <Assign DisplayName="Assign - writeCellStatusSuc" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[writeCellNotesSuc]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">["D" + (dt_Orders2.Rows.IndexOf(row) + 2).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message - writeCellNotesSuc" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Info" Message="[&quot;writeCellNotesSuc is set as &quot; + writeCellNotesSuc]" />
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_92">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[writeCellUnitPrice]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">["E" + (dt_Orders2.Rows.IndexOf(row) + 2).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message - writeCellUnitPrice" sap2010:WorkflowViewState.IdRef="LogMessage_60" Level="Info" Message="[&quot;writeCellUnitPrice is set as &quot; + writeCellUnitPrice]" />
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_93">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[writeCellTotalPrice]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">["F" + (dt_Orders2.Rows.IndexOf(row) + 2).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message - writeCellUnitPrice" sap2010:WorkflowViewState.IdRef="LogMessage_61" Level="Info" Message="[&quot;writeCellTotalPrice is set as &quot; + writeCellTotalPrice]" />
                                                    <ui:ExcelWriteCell Cell="[writeCellStatusSuc]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Orders" Text="Successful" />
                                                    <ui:ExcelWriteCell Cell="[writeCellNotesSuc]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Orders" Text="[&quot;Order #&quot; + orderNumber]" />
                                                    <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_5" QueueItemStates="New" QueueName="UnitPriceQueue" Reference="[prodName2]" Result="[unitPriceRet]" Top="1" />
                                                    <ui:ExcelWriteCell Cell="[writeCellUnitPrice]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="Orders" Text="[unitPriceRet.ElementAt(0).SpecificContent(&quot;unitPrice&quot;).ToString]" />
                                                    <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_6" QueueItemStates="New" QueueName="TotalPriceQueue" Reference="[prodName2]" Result="[totalPriceRet]" Top="1" />
                                                    <ui:ExcelWriteCell Cell="[writeCellTotalPrice]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="Orders" Text="[totalPriceRet.ElementAt(0).SpecificContent(&quot;totalPrice&quot;).ToString]" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_7" />
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                    </Sequence>
                                    <ui:ExcelWriteCell Cell="H2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="Orders" Text="[subTotalRet]" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                            </ui:ExcelApplicationScope>
                          </FlowStep>
                          <x:Reference>__ReferenceID3</x:Reference>
                        </Flowchart>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID27" sap2010:WorkflowViewState.IdRef="FlowStep_99">
                            <Flowchart DisplayName="Send Invoice Email" sap2010:WorkflowViewState.IdRef="Flowchart_34">
                              <Flowchart.Variables>
                                <Variable x:TypeArguments="x:String" Name="emailUsername" />
                                <Variable x:TypeArguments="x:String" Name="emailPassword" />
                                <Variable x:TypeArguments="ss:SecureString" Name="emailPasswordSecureString" />
                                <Variable x:TypeArguments="x:String" Name="pdfName" />
                                <Variable x:TypeArguments="x:String" Name="filePath" />
                                <Variable x:TypeArguments="x:String" Name="orderMaybe" />
                              </Flowchart.Variables>
                              <Flowchart.StartNode>
                                <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_169">
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="SendInvoiceEmail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="orderNumber">[orderNumber]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="billingFirstName">[billingFirstName]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="billingLastName">[billingLastName]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="billingStreetAddress">[billingStreetAddress]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="billingZIP">[billingZIP]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="shippingFirstName">[shippingFirstName]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="shippingLastName">[shippingLastName]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="shippingStreetAddress">[shippingStreetAddress]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="shippingZIP">[shippingZIP]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="subTotalRet">[subTotalRet]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </FlowStep>
                              </Flowchart.StartNode>
                              <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_97">
                                <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="secureEmailPassword" DisplayName="Get Credential" sap2010:WorkflowViewState.IdRef="GetRobotCredential_7" Password="[emailPasswordSecureString]" Username="[emailUsername]" />
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_96">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[emailPassword]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(String.Empty, emailPasswordSecureString).Password]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_155">
                                        <If Condition="[orderNumber.Equals(string.Empty)]" DisplayName="orderMaybe" sap2010:WorkflowViewState.IdRef="If_9">
                                          <If.Then>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_87">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[orderMaybe]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">(OrderNotPlaced)</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                          <If.Else>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_88">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[orderMaybe]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[orderNumber]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Else>
                                        </If>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_95">
                                            <Assign DisplayName="Assign - Email body" sap2010:WorkflowViewState.IdRef="Assign_29">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[emailBody]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["Hello valued customer, " + Environment.NewLine +
Environment.NewLine + 
"Your invoice for Order #" + orderMaybe +  "is attached." + Environment.NewLine +
Environment.NewLine + 
"Cheers, " + Environment.NewLine +
"Your friendly neighborhood robot."]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_94">
                                                <Assign DisplayName="Assign - Email subject" sap2010:WorkflowViewState.IdRef="Assign_30">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[emailSubject]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["Order Invoice for Order #" + orderMaybe]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_153">
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_84">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[filePath]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">["C:\revature\Uipath Processes\ProjectTwoRepository\HansenBeauProject2\Attachments\Invoice" + orderNumberParse]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <FlowStep.Next>
                                                      <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_152">
                                                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[filePath + &quot;.docx&quot;]" DisplayName="Copy File" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="C:\revature\Uipath Processes\ProjectTwoRepository\HansenBeauProject2\Accessory Files\InvoiceTemplate.docx" />
                                                        <FlowStep.Next>
                                                          <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_146">
                                                            <p:WordApplicationScope DisplayName="Build Invoice" FilePath="[filePath + &quot;.docx&quot;]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                                                              <p:WordApplicationScope.Body>
                                                                <ActivityAction x:TypeArguments="ui:WordDocument">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_150">
                                                                    <ui:LogMessage DisplayName="Log Message - Word Applciation Scope Enterred" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Info" Message="[&quot;Word Application Scope Entered&quot;]" />
                                                                    <Sequence DisplayName="Fill out Contact Information" sap2010:WorkflowViewState.IdRef="Sequence_149">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:Decimal" Name="subTotalDecimal" />
                                                                        <Variable x:TypeArguments="x:Decimal" Name="totalDue" />
                                                                      </Sequence.Variables>
                                                                      <If Condition="[orderNumber.Equals(string.Empty)]" sap2010:WorkflowViewState.IdRef="If_8">
                                                                        <If.Then>
                                                                          <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_17" Replace="ORDER NOT PLACED" Search="ONO" />
                                                                        </If.Then>
                                                                        <If.Else>
                                                                          <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_18" Replace="[&quot;ORDER #&quot; + orderNumber]" Search="ONO" />
                                                                        </If.Else>
                                                                      </If>
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[billingFirstName + &quot; &quot; + billingLastName]" Search="billName" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[billingStreetAddress]" Search="billSA" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_6" Replace="[billingZIP]" Search="billZIP" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_3" Replace="[shippingFirstName + &quot; &quot; + shippingLastName]" Search="shipName" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_4" Replace="[shippingStreetAddress]" Search="shipSA" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_5" Replace="[shippingZIP]" Search="shipZIP" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_19" Replace="[(DateTime.Now.ToShortDateString)]" Search="TODAY" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_13" Replace="[(DateTime.Now.AddMonths(1).ToShortDateString)]" Search="DATE" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_11" Replace="8.25%" Search="salest" />
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_12" Replace="[subTotalRet]" Search="subt" />
                                                                      <Assign DisplayName="Assign - subTotalDouble" sap2010:WorkflowViewState.IdRef="Assign_81">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Decimal">[subTotalDecimal]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Decimal">[convert.ToDecimal(subTotalRet.Replace("$"C,""))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Assign - totalDue" sap2010:WorkflowViewState.IdRef="Assign_82">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Decimal">[totalDue]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Decimal">[decimal.Multiply( subTotalDecimal, Convert.ToDecimal(1.0825))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_14" Replace="[&quot;$&quot; + totalDue.ToString(&quot;#,##0.00&quot;)]" Search="tdbd" />
                                                                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_13" WorkbookPath="Accessory Files\Orders2.xlsx">
                                                                        <ui:ExcelApplicationScope.Body>
                                                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                                            <ActivityAction.Argument>
                                                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                                            </ActivityAction.Argument>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_153">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="x:Int32" Name="fECounter" />
                                                                              </Sequence.Variables>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_70">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Int32">[fECounter]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_152">
                                                                                <Sequence.Variables>
                                                                                  <Variable x:TypeArguments="sd:DataTable" Name="dt_Orders2Final" />
                                                                                </Sequence.Variables>
                                                                                <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_Orders2Final]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" SheetName="Orders">
                                                                                  <ui:ExcelReadRange.Range>
                                                                                    <InArgument x:TypeArguments="x:String">
                                                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                                                    </InArgument>
                                                                                  </ui:ExcelReadRange.Range>
                                                                                </ui:ExcelReadRange>
                                                                                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_Orders2Final]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                                                                  <ui:ForEachRow.Body>
                                                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_151">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:String" Name="unitPriceInvoice" />
                                                                                          <Variable x:TypeArguments="x:String" Name="totalPriceInvoice" />
                                                                                        </Sequence.Variables>
                                                                                        <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text - Quantity" sap2010:WorkflowViewState.IdRef="WordReplaceText_7" Replace="[row(1).ToString]" Search="[&quot;Q&quot; + fECounter.ToString]" />
                                                                                        <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text - ProductName" sap2010:WorkflowViewState.IdRef="WordReplaceText_8" Replace="[row(0).ToString]" Search="[&quot;Des&quot; + fECounter.ToString]" />
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_77">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[unitPriceInvoice]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[row(4).ToString]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <If Condition="[unitPriceInvoice.Equals(string.Empty)]" sap2010:WorkflowViewState.IdRef="If_6">
                                                                                          <If.Then>
                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text - Unit Price (empty)" sap2010:WorkflowViewState.IdRef="WordReplaceText_15" Replace="[string.Empty]" Search="[&quot;Up&quot; + fECounter.ToString]" />
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text - Unit Price" sap2010:WorkflowViewState.IdRef="WordReplaceText_9" Replace="[&quot;$&quot; + Convert.ToDecimal( unitPriceInvoice).ToString(&quot;#,##0.00&quot;)]" Search="[&quot;Up&quot; + fECounter.ToString]" />
                                                                                          </If.Else>
                                                                                        </If>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_78">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[totalPriceInvoice]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[row(5).ToString]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <If Condition="[totalPriceInvoice.Equals(string.Empty)]" sap2010:WorkflowViewState.IdRef="If_7">
                                                                                          <If.Then>
                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text - Total Price (empty)" sap2010:WorkflowViewState.IdRef="WordReplaceText_16" Replace="[row(3).ToString]" Search="[&quot;Tot&quot; + fECounter.ToString]" />
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text - Total Price" sap2010:WorkflowViewState.IdRef="WordReplaceText_10" Replace="[&quot;$&quot; + Convert.ToDouble( totalPriceInvoice).ToString(&quot;#,##0.00&quot;)]" Search="[&quot;Tot&quot; + fECounter.ToString]" />
                                                                                          </If.Else>
                                                                                        </If>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_71">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:Int32">[fECounter]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:Int32">[fECounter + 1]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEachRow.Body>
                                                                                </ui:ForEachRow>
                                                                              </Sequence>
                                                                            </Sequence>
                                                                          </ActivityAction>
                                                                        </ui:ExcelApplicationScope.Body>
                                                                      </ui:ExcelApplicationScope>
                                                                    </Sequence>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_79">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[pdfName]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[filePath]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <p:WordExportToPdf DisplayName="Export to PDF" FilePath="[pdfName]" sap2010:WorkflowViewState.IdRef="WordExportToPdf_1" />
                                                                    <ui:LogMessage DisplayName="Log Message - Invoice PDF created" sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="Info" Message="[&quot;Invoice PDF created as &quot; + pdfName]" />
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </p:WordApplicationScope.Body>
                                                            </p:WordApplicationScope>
                                                            <FlowStep.Next>
                                                              <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_162">
                                                                <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[filePath + &quot;.docx&quot;]" />
                                                                <FlowStep.Next>
                                                                  <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_151">
                                                                    <Flowchart DisplayName="Prepare and Send Invoice" sap2010:WorkflowViewState.IdRef="Flowchart_50">
                                                                      <Flowchart.Variables>
                                                                        <Variable x:TypeArguments="s:String[]" Name="filesToAttach" />
                                                                      </Flowchart.Variables>
                                                                      <Flowchart.StartNode>
                                                                        <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_150">
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_80">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="s:String[]">[filesToAttach]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="s:String[]">[System.IO.Directory.GetFiles("C:\revature\Uipath Processes\ProjectTwoRepository\HansenBeauProject2\Attachments/")]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <FlowStep.Next>
                                                                            <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_149">
                                                                              <ui:LogMessage DisplayName="Log Message - filesToAttach" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Info" Message="[&quot;filesToAttach are &quot; + filesToAttach.ToString]" />
                                                                              <FlowStep.Next>
                                                                                <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_148">
                                                                                  <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[filesToAttach]" Body="[emailBody]" DisplayName="Send SMTP Mail Message" Email="[emailUsername]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="False" Name="Orchestrator Robot" Password="[emailPassword]" Port="465" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[emailSubject]" To="testrobot123beau@gmail.com">
                                                                                    <ui:SendMail.Files>
                                                                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                                                    </ui:SendMail.Files>
                                                                                  </ui:SendMail>
                                                                                  <FlowStep.Next>
                                                                                    <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_154">
                                                                                      <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[filePath + &quot;.pdf&quot;]" />
                                                                                    </FlowStep>
                                                                                  </FlowStep.Next>
                                                                                </FlowStep>
                                                                              </FlowStep.Next>
                                                                            </FlowStep>
                                                                          </FlowStep.Next>
                                                                        </FlowStep>
                                                                      </Flowchart.StartNode>
                                                                      <x:Reference>__ReferenceID4</x:Reference>
                                                                      <x:Reference>__ReferenceID5</x:Reference>
                                                                      <x:Reference>__ReferenceID6</x:Reference>
                                                                      <x:Reference>__ReferenceID7</x:Reference>
                                                                    </Flowchart>
                                                                  </FlowStep>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowStep.Next>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                              <x:Reference>__ReferenceID8</x:Reference>
                              <x:Reference>__ReferenceID9</x:Reference>
                              <x:Reference>__ReferenceID10</x:Reference>
                              <x:Reference>__ReferenceID11</x:Reference>
                              <x:Reference>__ReferenceID12</x:Reference>
                              <x:Reference>__ReferenceID13</x:Reference>
                              <x:Reference>__ReferenceID14</x:Reference>
                              <x:Reference>__ReferenceID15</x:Reference>
                              <x:Reference>__ReferenceID16</x:Reference>
                              <x:Reference>__ReferenceID17</x:Reference>
                            </Flowchart>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID30" sap2010:WorkflowViewState.IdRef="FlowStep_140">
                        <Flowchart DisplayName="Place Orders to Pega" sap2010:WorkflowViewState.IdRef="Flowchart_39">
                          <Flowchart.StartNode>
                            <FlowStep x:Name="__ReferenceID18" sap2010:WorkflowViewState.IdRef="FlowStep_166">
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="PlaceOrdersToPega.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_Orders">[dt_Orders]</InArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="unsuccessfulOrdersList">[unsuccessfulOrdersList]</InOutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </FlowStep>
                          </Flowchart.StartNode>
                          <x:Reference>__ReferenceID18</x:Reference>
                        </Flowchart>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID29" sap2010:WorkflowViewState.IdRef="FlowStep_139">
                            <Flowchart DisplayName="Checkout" sap2010:WorkflowViewState.IdRef="Flowchart_46">
                              <Flowchart.StartNode>
                                <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_167">
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Checkout.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_Orders">[dt_Orders]</InArgument>
                                      <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_Address">[dt_Address]</InArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="exceptionBreak">[exceptionBreak]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="billingFirstName">[billingFirstName]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="billingLastName">[billingLastName]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="billingZIP">[billingZIP]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="shippingFirstName">[shippingFirstName]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="shippingLastName">[shippingLastName]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="ShippingZIP">[shippingZIP]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="shippingStreetAddress">[shippingStreetAddress]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="billingStreetAddress">[billingStreetAddress]</OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </FlowStep>
                              </Flowchart.StartNode>
                              <x:Reference>__ReferenceID19</x:Reference>
                            </Flowchart>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID35" Condition="[exceptionBreak]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_2" True="{x:Reference __ReferenceID20}">
                                <FlowDecision.False>
                                  <FlowStep x:Name="__ReferenceID28" sap2010:WorkflowViewState.IdRef="FlowStep_138">
                                    <Flowchart DisplayName="Logout of Pega" sap2010:WorkflowViewState.IdRef="Flowchart_49">
                                      <Flowchart.StartNode>
                                        <FlowStep x:Name="__ReferenceID21" sap2010:WorkflowViewState.IdRef="FlowStep_168">
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="LogoutOfPega.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </FlowStep>
                                      </Flowchart.StartNode>
                                      <x:Reference>__ReferenceID21</x:Reference>
                                    </Flowchart>
                                    <FlowStep.Next>
                                      <x:Reference>__ReferenceID20</x:Reference>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.False>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_7">
      <Flowchart DisplayName="Read/ Store Config.txt" sap2010:WorkflowViewState.IdRef="Flowchart_1">
        <Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID22" sap2010:WorkflowViewState.IdRef="FlowStep_11">
            <ui:ReadTextFile Content="[configParams]" DisplayName="Read Text File - config.txt" FileName="Accessory Files\config.txt" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID23" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON - config.txt" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[Config]" JsonString="[configParams]" />
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID26" sap2010:WorkflowViewState.IdRef="FlowStep_24">
                    <Assign DisplayName="Assign - retry from Config.txt" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[retry]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Config("Retry").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID24" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                        <Assign DisplayName="Assign - username from Config.txt" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[username]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Config("Username").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID25" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                            <Assign DisplayName="Assign - password from Config.txt" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[password]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Config("Password").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </Flowchart.StartNode>
        <x:Reference>__ReferenceID22</x:Reference>
        <x:Reference>__ReferenceID23</x:Reference>
        <x:Reference>__ReferenceID24</x:Reference>
        <x:Reference>__ReferenceID25</x:Reference>
        <x:Reference>__ReferenceID26</x:Reference>
      </Flowchart>
    </FlowStep>
    <x:Reference>__ReferenceID20</x:Reference>
    <x:Reference>__ReferenceID27</x:Reference>
    <x:Reference>__ReferenceID28</x:Reference>
    <x:Reference>__ReferenceID29</x:Reference>
    <x:Reference>__ReferenceID30</x:Reference>
    <x:Reference>__ReferenceID31</x:Reference>
    <x:Reference>__ReferenceID32</x:Reference>
    <x:Reference>__ReferenceID33</x:Reference>
    <x:Reference>__ReferenceID34</x:Reference>
    <x:Reference>__ReferenceID35</x:Reference>
    <sads:DebugSymbol.Symbol>d1dDOlxyZXZhdHVyZVxVaXBhdGggUHJvY2Vzc2VzXFByb2plY3RUd29SZXBvc2l0b3J5XEhhbnNlbkJlYXVQcm9qZWN0MlxNYWluRmxvd2NoYXJ0LnhhbWxATgOMBg8CAQFVNVU7AgECaQl4FQIBWnsNhwEZAgFTigERmAEdAgFImgFEmgFWAgFGggUZjgUlAgE/kQUdpgUpAgEmqAVQqAViAgEkqwUltgUxAgEhnQEZrQIlAgEasAId+wQpAgEDbA90JwIBW34TgwErAgFUjQEXlAEvAgFJhQUfigU3AgFAlAUjogU7AgEnrgUrsgVDAgEioAEfpQE3AgEbuwIjyAI7AgEEckhyTwIBZXFTcWMCAWNwZHB8AgFhb19vdQIBX25MblYCAV1s1gFs9AECAVyAAVWAAWACAViBAVaBAWICAVZ+vwF+3AECAVWSAVuSAWsCAVGRAViRAWMCAU+QAWaQAXwCAU2PAVOPAV0CAUuNAcMBjQHVAQIBSocFYIcFawIBRIgFdogFjgECAUKFBcsBhQXjAQIBQZ8FbZ8FhAECAT2bBWKbBW4CATuYBWeYBXcCATmWBWSWBW8CATedBWidBXoCATWeBWOeBXACATOaBWeaBXgCATGXBWWXBXECAS+cBWmcBXwCAS2ZBWiZBXoCASuUBc8BlAXeAQIBKqAFbKAFggECASiuBdcBrgXqAQIBI6MBX6MBbAIBH6IBX6IBbAIBHaABywGgAeUBAgEcxgJixgJvAgEYxAJsxAKDAQIBFsUCYsUCbwIBFMECYcECbQIBEsMCZ8MCeQIBEL8CZr8CdwIBDr0CYr0CbwIBDMICaMICewIBCr4CZ74CeQIBCLsCzwG7AuYBAgEHwAJrwAKBAQIBBQ==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_163">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,14.02</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_35" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">10,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Height">600.08000000000061</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">70,40 100,40 100,40.42 120,40.42</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314.4,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_164">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,14.02</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_36" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">10,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Height">608.79999999999836</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">70,40 100,40 100,40.42 120,40.42</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314.4,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_165">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,14.02</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_37" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">10,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">70,40 100,40 100,40.42 120,40.42</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="314.4,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_170">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">110,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_7" sap:VirtualizedContainerService.HintSize="614.4,60" />
      <sap2010:ViewStateData Id="GetQueueItems_1" sap:VirtualizedContainerService.HintSize="614.4,22.4" />
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="614.4,60" />
      <sap2010:ViewStateData Id="LogMessage_59" sap:VirtualizedContainerService.HintSize="614.4,92.8" />
      <sap2010:ViewStateData Id="GetQueueItems_2" sap:VirtualizedContainerService.HintSize="614.4,22.4" />
      <sap2010:ViewStateData Id="Assign_91" sap:VirtualizedContainerService.HintSize="614.4,60" />
      <sap2010:ViewStateData Id="GetQueueItems_3" sap:VirtualizedContainerService.HintSize="614.4,22.4" />
      <sap2010:ViewStateData Id="GetQueueItems_4" sap:VirtualizedContainerService.HintSize="614.4,22.4" />
      <sap2010:ViewStateData Id="Assign_94" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="LogMessage_40" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="LogMessage_41" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_92" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="LogMessage_60" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_93" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="LogMessage_61" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="ExcelWriteCell_11" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="ExcelWriteCell_14" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="GetQueueItems_5" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="ExcelWriteCell_21" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="GetQueueItems_6" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="ExcelWriteCell_22" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_139" sap:VirtualizedContainerService.HintSize="336.8,1752.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Continue_7" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="561.6,1902.4" />
      <sap2010:ViewStateData Id="Sequence_140" sap:VirtualizedContainerService.HintSize="584,2027.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="614.4,2176" />
      <sap2010:ViewStateData Id="Sequence_141" sap:VirtualizedContainerService.HintSize="636.8,2983.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_24" sap:VirtualizedContainerService.HintSize="636.8,88" />
      <sap2010:ViewStateData Id="Sequence_154" sap:VirtualizedContainerService.HintSize="659.2,3236">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_11" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_144">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">800,23.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_7" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">0,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Width">1473.973142871163</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">60,40 110,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314.4,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_169">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">110,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRobotCredential_7" sap:VirtualizedContainerService.HintSize="200,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_87" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_88" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="243.2,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_84" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CopyFile_1" sap:VirtualizedContainerService.HintSize="200,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_49" sap:VirtualizedContainerService.HintSize="788,92.8" />
      <sap2010:ViewStateData Id="WordReplaceText_17" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="WordReplaceText_18" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="765.6,209.6" />
      <sap2010:ViewStateData Id="WordReplaceText_1" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_2" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_6" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_3" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_4" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_5" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_19" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_13" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_11" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_12" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="Assign_82" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_14" sap:VirtualizedContainerService.HintSize="765.6,60" />
      <sap2010:ViewStateData Id="Assign_70" sap:VirtualizedContainerService.HintSize="728.8,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_9" sap:VirtualizedContainerService.HintSize="706.4,60" />
      <sap2010:ViewStateData Id="WordReplaceText_7" sap:VirtualizedContainerService.HintSize="653.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_8" sap:VirtualizedContainerService.HintSize="653.6,60" />
      <sap2010:ViewStateData Id="Assign_77" sap:VirtualizedContainerService.HintSize="653.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_15" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="WordReplaceText_9" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="653.6,209.6" />
      <sap2010:ViewStateData Id="Assign_78" sap:VirtualizedContainerService.HintSize="653.6,60" />
      <sap2010:ViewStateData Id="WordReplaceText_16" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="WordReplaceText_10" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="653.6,209.6" />
      <sap2010:ViewStateData Id="Assign_71" sap:VirtualizedContainerService.HintSize="653.6,60" />
      <sap2010:ViewStateData Id="Sequence_151" sap:VirtualizedContainerService.HintSize="676,1084">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="706.4,1232.8" />
      <sap2010:ViewStateData Id="Sequence_152" sap:VirtualizedContainerService.HintSize="728.8,1457.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_153" sap:VirtualizedContainerService.HintSize="751.2,1682.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_13" sap:VirtualizedContainerService.HintSize="765.6,1792" />
      <sap2010:ViewStateData Id="Sequence_149" sap:VirtualizedContainerService.HintSize="788,3466.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="788,60" />
      <sap2010:ViewStateData Id="WordExportToPdf_1" sap:VirtualizedContainerService.HintSize="788,60" />
      <sap2010:ViewStateData Id="LogMessage_50" sap:VirtualizedContainerService.HintSize="788,92.8" />
      <sap2010:ViewStateData Id="Sequence_150" sap:VirtualizedContainerService.HintSize="810.4,4056.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordApplicationScope_1" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_3" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="Assign_80" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_48" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendMail_2" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="200,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_154">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">883.2,29.22</av:Point>
            <av:Size x:Key="ShapeSize">200,22.4</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_148">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">633.2,14.02</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">833.2,40.42 883.2,40.42</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_149">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">383.2,14.02</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">583.2,40.42 633.2,40.42</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_150">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">90,10</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">333.2,40 363.2,40 363.2,40.42 383.2,40.42</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_50" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">0,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Width">1466.5011525399575</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">60,40 90,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_151">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">500,483.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_162">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">230,498.8</av:Point>
            <av:Size x:Key="ShapeSize">200,22.4</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">430,510 500,510</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">230,373.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,426.4 330,498.8</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_152">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">480,388.8</av:Point>
            <av:Size x:Key="ShapeSize">200,22.4</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">480,400 430,400</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_153">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">758.4,370</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">758.4,400 680,400</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">1058.4,370</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1058.4,400 1001.6,400</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_95">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">1058.4,258</av:Point>
            <av:Size x:Key="ShapeSize">243.2,64</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1180,322 1180,370</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_155">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">800,263.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1000,290 1058.4,290</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_96">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">500,260</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">743.2,290 800,290</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_97">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">250,278.8</av:Point>
            <av:Size x:Key="ShapeSize">200,22.4</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">450,290 500,290</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_34" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">0,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Width">1326.7293434986532</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">60,40 110,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_99">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,313.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">380,313.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">380,340 320,340</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314.4,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_166">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,14.02</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_39" sap:VirtualizedContainerService.HintSize="614.4,636.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">10,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">70,40 100,40 100,40.42 120,40.42</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_46" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">10,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Width">1070</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">70,40 120,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314.4,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_168">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,14.12</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_49" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">10,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Height">622.48000000000093</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">70,40.1 100,40.1 100,40.52 120,40.52</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_138">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">620,313.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">620,340 580,340</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="79.2,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">1040.4,446.4</av:Point>
            <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
            <av:PointCollection x:Key="FalseConnector">1119.6,490 1149.6,490 1149.6,340 820,340</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">1040.4,490 480,490 480,366.4</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_139">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">980,133.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1080,186.4 1080,446.4</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_140">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">980,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1080,66.4 1080,133.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="79.2,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">680.641666666667,126.5</av:Point>
            <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
            <av:PointCollection x:Key="FalseConnector">759.041666666667,170.1 950,170.1 950,40 980,40</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">680.641666666667,170.1 480,170.1 480,313.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_141">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">620,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">720,66.4 720,96.4 719.841666666667,96.4 719.841666666667,126.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_142">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">570,40 620,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_143">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,93.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">320,120 350,120 350,40 370,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeserializeJson`1_1" sap:VirtualizedContainerService.HintSize="314.4,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">451.2,120</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">744.4,120</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">744.4,150 694.4,150</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_24">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">744.4,10</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">866,70 866,120</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">380,10</av:Point>
            <av:Size x:Key="ShapeSize">314.4,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">694.4,40 744.4,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">130,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,40 380,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">20,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Width">1128.1142717653588</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">80,40 130,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_8" sap:VirtualizedContainerService.HintSize="1340.8,640">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">10,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Width">1326.3999999999999</x:Double>
            <x:Double x:Key="Height">603.2800000000002</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">70,40 100,40 100,120 120,120</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MainFlowchart_1" sap:VirtualizedContainerService.HintSize="1380.8,720" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>