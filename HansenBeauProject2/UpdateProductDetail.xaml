<Activity mc:Ignorable="sap sap2010 sads" x:Class="UpdateProductDetail"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="orderNumber" Type="OutArgument(x:String)" />
    <x:Property Name="subTotalRet" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>UpdateProductDetail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="UpdateProductDetail" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="dt_Orders2" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_1">
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope - Write Successful Orders" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[dt_Orders2]" WorkbookPath="Accessory Files\Orders2.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dt_Orders2" />
                    <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="orderNumberGet" />
                    <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="unitPriceGet" />
                    <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="totalPriceGet" />
                    <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="subTotalGet" />
                  </Sequence.Variables>
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_Orders2]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Orders">
                    <ui:ExcelReadRange.Range>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelReadRange.Range>
                  </ui:ExcelReadRange>
                  <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items - orderNumber" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New" QueueName="OrderNumberQueue" Result="[orderNumberGet]" Top="1" />
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[orderNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[orderNumberGet.ElementAt(0).SpecificContent("orderNumberParse").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;orderNumber retreived as &quot; + orderNumber]" />
                  <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items - subTotal" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" QueueItemStates="New" QueueName="SubTotalQueue" Result="[subTotalGet]" Top="1" />
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[subTotalRet]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[subTotalGet.ElementAt(0).SpecificContent("subTotal").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items - unitPrice" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_3" QueueItemStates="New" QueueName="UnitPriceQueue" Result="[unitPriceGet]" />
                  <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items - totalPrice" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_4" QueueItemStates="New" QueueName="TotalPriceQueue" Result="[totalPriceGet]" />
                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_Orders2]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="writeCellStatusSuc" />
                          </Sequence.Variables>
                          <If Condition="[row(3).ToString.Equals(string.Empty)]" sap2010:WorkflowViewState.IdRef="If_1">
                            <If.Then>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="writeCellNotesSuc" />
                                  <Variable x:TypeArguments="x:String" Name="writeCellUnitPrice" />
                                  <Variable x:TypeArguments="x:String" Name="writeCellTotalPrice" />
                                  <Variable x:TypeArguments="x:String" Name="prodName2" />
                                  <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="unitPriceRet" />
                                  <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="totalPriceRet" />
                                </Sequence.Variables>
                                <Assign DisplayName="Assign - prodName" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[prodName2]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign - writeCellStatusSuc" sap2010:WorkflowViewState.IdRef="Assign_4">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[writeCellStatusSuc]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["C" + (dt_Orders2.Rows.IndexOf(row) + 2).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message - writeCellStatusSuc" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;writeCellStatusSuc is set as &quot; + writeCellStatusSuc]" />
                                <Assign DisplayName="Assign - writeCellStatusSuc" sap2010:WorkflowViewState.IdRef="Assign_5">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[writeCellNotesSuc]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["D" + (dt_Orders2.Rows.IndexOf(row) + 2).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message - writeCellNotesSuc" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;writeCellNotesSuc is set as &quot; + writeCellNotesSuc]" />
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[writeCellUnitPrice]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["E" + (dt_Orders2.Rows.IndexOf(row) + 2).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message - writeCellUnitPrice" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;writeCellUnitPrice is set as &quot; + writeCellUnitPrice]" />
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[writeCellTotalPrice]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["F" + (dt_Orders2.Rows.IndexOf(row) + 2).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message - writeCellUnitPrice" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;writeCellTotalPrice is set as &quot; + writeCellTotalPrice]" />
                                <ui:ExcelWriteCell Cell="[writeCellStatusSuc]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Orders" Text="Successful" />
                                <ui:ExcelWriteCell Cell="[writeCellNotesSuc]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Orders" Text="[&quot;Order #&quot; + orderNumber]" />
                                <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_5" QueueItemStates="New" QueueName="UnitPriceQueue" Reference="[prodName2]" Result="[unitPriceRet]" Top="1" />
                                <ui:ExcelWriteCell Cell="[writeCellUnitPrice]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Orders" Text="[unitPriceRet.ElementAt(0).SpecificContent(&quot;unitPrice&quot;).ToString]" />
                                <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_6" QueueItemStates="New" QueueName="TotalPriceQueue" Reference="[prodName2]" Result="[totalPriceRet]" Top="1" />
                                <ui:ExcelWriteCell Cell="[writeCellTotalPrice]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Orders" Text="[totalPriceRet.ElementAt(0).SpecificContent(&quot;totalPrice&quot;).ToString]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_1" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
                <ui:ExcelWriteCell Cell="H2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Orders" Text="[subTotalRet]" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <sads:DebugSymbol.Symbol>d11DOlxyZXZhdHVyZVxVaXBhdGggUHJvY2Vzc2VzXFByb2plY3RUd29SZXBvc2l0b3J5XEhhbnNlbkJlYXVQcm9qZWN0MlxVcGRhdGVQcm9kdWN0RGV0YWlsLnhhbWxcRAPQAQ8CAQFKCcsBJAIBAkq6AUrIAQIBckrWAUr0AQIBcVAPyAEaAgEDURHGARwCAQnHARHHAaQBAgEEWRNfJwIBbGATYPYCAgFoYRNoHAIBZGkTaboBAgFhahNq7QICAV1rE3IcAgFZcxNz9wICAVZ0E3T6AgIBU3UTxQEjAgEKxwEpxwEtAgEIxwGSAccBoQECAQbHAYQBxwGMAQIBBVlCWVACAW9cGVxIAgFuWacBWa8BAgFtYPACYPMCAgFrYL8CYNECAgFqYNkCYOsCAgFpZj5miAECAWdjP2NMAgFlaYABabcBAgFiaucCauoCAgFgarwCassCAgFfatMCauICAgFecD5wfQIBXG0/bUwCAVpzzAJz3AICAVhz5AJz9AICAVd0zQJ03gICAVV05gJ09wICAVR1RHVSAgFRexnCASQCAQt/G8EBIAIBDH8pf1ECAQ2BAR+8ASoCAQ+/AR+/AVsCAQ6KASGRASoCAU2SASGZASoCAUmaASGaAegBAgFGmwEhogEqAgFCowEhowHlAQIBP6QBIasBKgIBO6wBIawB6AECATitASG0ASoCATS1ASG1AeoBAgExtgEhtgHDAQIBLLcBIbcB2wECASa4ASG4AfUCAgEguQEhuQGEAgIBG7oBIboB9wICARW7ASG7AYcCAgEQjwFMjwFdAgFQjAFNjAFYAgFOlwFMlwF/AgFMlAFNlAFhAgFKmgGjAZoB5QECAUegAUygAX8CAUWdAU2dAWACAUOjAaIBowHiAQIBQKkBTKkBfwIBPqYBTaYBYQIBPKwBowGsAeUBAgE5sgFMsgF/AgE3rwFNrwFiAgE1tQGjAbUB5wECATK2ATm2AU8CAS+2AbQBtgHAAQIBLrYBpgG2Aa4BAgEttwE5twFOAgEqtwGzAbcB2AECASi3AaUBtwGtAQIBJ7gBxQK4AdICAgEkuAHvArgB8gICASO4AaoCuAG6AgIBIrgB2gK4AeoCAgEhuQE5uQFPAgEeuQG0AbkBgQICAR25AaYBuQGuAQIBHLoBxgK6AdMCAgEZugHxAroB9AICARi6AaoCugG7AgIBF7oB2wK6AewCAgEWuwE5uwFQAgETuwG1AbsBhAICARK7AacBuwGvAQIBEQ==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="614.4,60" />
      <sap2010:ViewStateData Id="GetQueueItems_1" sap:VirtualizedContainerService.HintSize="614.4,22.4" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="614.4,60" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="614.4,92.8" />
      <sap2010:ViewStateData Id="GetQueueItems_2" sap:VirtualizedContainerService.HintSize="614.4,22.4" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="614.4,60" />
      <sap2010:ViewStateData Id="GetQueueItems_3" sap:VirtualizedContainerService.HintSize="614.4,22.4" />
      <sap2010:ViewStateData Id="GetQueueItems_4" sap:VirtualizedContainerService.HintSize="614.4,22.4" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="ExcelWriteCell_1" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="GetQueueItems_5" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="ExcelWriteCell_3" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="GetQueueItems_6" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="ExcelWriteCell_4" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336.8,1752.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Continue_1" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="561.6,1902.4" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="584,2027.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="614.4,2176" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="636.8,2983.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_5" sap:VirtualizedContainerService.HintSize="636.8,88" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="659.2,3236">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="673.6,3345.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">110,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1339.2,647.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">0,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Width">1324.7999999999997</x:Double>
            <x:Double x:Key="Height">610.48</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">60,40 110,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UpdateProductDetail_1" sap:VirtualizedContainerService.HintSize="1379.2,727.2" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>