<Activity mc:Ignorable="sap sap2010 sads" x:Class="LoginToPega"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="username" Type="InArgument(x:String)" />
    <x:Property Name="securePasswordString" Type="InArgument(ss:SecureString)" />
    <x:Property Name="dt_Orders" Type="InArgument(sd:DataTable)" />
    <x:Property Name="exceptionBreak" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="LoginToPega">
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0">
        <Sequence DisplayName="Login Recording">
          <TryCatch DisplayName="Try Catch">
            <TryCatch.Try>
              <ui:OpenBrowser UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Open Browser - Login Page" Hidden="False" NewSession="True" Private="False" Url="http://training.openspan.com/login">
                <ui:OpenBrowser.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do">
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'User Name'" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="6792edb243f2f4c6bda4ea6c580998d9" Selector="&lt;webctrl id='user_name' tag='INPUT' /&gt;" WaitForReady="INTERACTIVE" />
                        </ui:Click.Target>
                        <sap2010:WorkflowViewState.IdRef>Click_1</sap2010:WorkflowViewState.IdRef>
                      </ui:Click>
                      <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type 'username' Into 'User Name'" EmptyField="True" SendWindowMessages="False" SimulateType="True" Text="[username]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="57868a7d45e5ed7187f8e7fedc2f9eaa" Selector="&lt;webctrl id='user_name' tag='INPUT' /&gt;" WaitForReady="COMPLETE" />
                        </ui:TypeInto.Target>
                        <sap2010:WorkflowViewState.IdRef>TypeInto_1</sap2010:WorkflowViewState.IdRef>
                      </ui:TypeInto>
                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="tab - select 'Password'" EmptyField="False" Key="tab" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                        </ui:SendHotkey.Target>
                        <sap2010:WorkflowViewState.IdRef>SendHotkey_1</sap2010:WorkflowViewState.IdRef>
                      </ui:SendHotkey>
                      <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type 'securePasswordString' Into 'Password'" EmptyField="True" SendWindowMessages="False" SimulateType="True" Text="[securePasswordString.ToString]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="6bba725736122c8c5fbb990e4fda3e78" Selector="&lt;webctrl id='user_pass' tag='INPUT' /&gt;" WaitForReady="COMPLETE" />
                        </ui:TypeInto.Target>
                        <sap2010:WorkflowViewState.IdRef>TypeInto_2</sap2010:WorkflowViewState.IdRef>
                      </ui:TypeInto>
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Sign In' Button" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition OffsetX="44" OffsetY="16" Position="TopLeft" />
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="fb7d8ba051c8e5d6d48c54ffda2d24eb" Selector="&lt;webctrl id='login_button' tag='INPUT' /&gt;" WaitForReady="COMPLETE" />
                        </ui:Click.Target>
                        <sap2010:WorkflowViewState.IdRef>Click_2</sap2010:WorkflowViewState.IdRef>
                      </ui:Click>
                      <sap2010:WorkflowViewState.IdRef>Sequence_1</sap2010:WorkflowViewState.IdRef>
                    </Sequence>
                  </ActivityAction>
                </ui:OpenBrowser.Body>
                <sap2010:WorkflowViewState.IdRef>OpenBrowser_1</sap2010:WorkflowViewState.IdRef>
              </ui:OpenBrowser>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="ui:SelectorNotFoundException">
                <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" WorkbookPath="Accessory Files\Orders2.xlsx">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do">
                            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_Orders]" DisplayName="Read Range" SheetName="Orders">
                              <ui:ExcelReadRange.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:ExcelReadRange.Range>
                              <sap2010:WorkflowViewState.IdRef>ExcelReadRange_1</sap2010:WorkflowViewState.IdRef>
                            </ui:ExcelReadRange>
                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_Orders]" DisplayName="For Each Row">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="writeCellStatusLoginError" />
                                      <Variable x:TypeArguments="x:String" Name="writeCellNotesLoginError" />
                                    </Sequence.Variables>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[writeCellStatusLoginError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["C" + dt_Orders.Rows.IndexOf(row).ToString]</InArgument>
                                      </Assign.Value>
                                      <sap2010:WorkflowViewState.IdRef>Assign_1</sap2010:WorkflowViewState.IdRef>
                                    </Assign>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[writeCellNotesLoginError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">["D" + dt_Orders.Rows.IndexOf(row).ToString]</InArgument>
                                      </Assign.Value>
                                      <sap2010:WorkflowViewState.IdRef>Assign_2</sap2010:WorkflowViewState.IdRef>
                                    </Assign>
                                    <ui:ExcelWriteCell Cell="[writeCellStatusLoginError]" DisplayName="Write Cell" SheetName="Orders" Text="Unsuccessful" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" />
                                    <ui:ExcelWriteCell Cell="[writeCellNotesLoginError]" DisplayName="Write Cell" SheetName="Orders" Text="Server-side error when navigating to http://training.openspan.com/login. Order not placed" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" />
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[exceptionBreak]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                      </Assign.Value>
                                      <sap2010:WorkflowViewState.IdRef>Assign_3</sap2010:WorkflowViewState.IdRef>
                                    </Assign>
                                    <sap2010:WorkflowViewState.IdRef>Sequence_2</sap2010:WorkflowViewState.IdRef>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <sap2010:WorkflowViewState.IdRef>ForEachRow_1</sap2010:WorkflowViewState.IdRef>
                            </ui:ForEachRow>
                            <sap2010:WorkflowViewState.IdRef>Sequence_3</sap2010:WorkflowViewState.IdRef>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap2010:WorkflowViewState.IdRef>ExcelApplicationScope_1</sap2010:WorkflowViewState.IdRef>
                    </ui:ExcelApplicationScope>
                    <sap2010:WorkflowViewState.IdRef>Sequence_4</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                </ActivityAction>
                <sap2010:WorkflowViewState.IdRef>Catch`1_1</sap2010:WorkflowViewState.IdRef>
              </Catch>
            </TryCatch.Catches>
            <sap2010:WorkflowViewState.IdRef>TryCatch_1</sap2010:WorkflowViewState.IdRef>
          </TryCatch>
          <sap2010:WorkflowViewState.IdRef>Sequence_5</sap2010:WorkflowViewState.IdRef>
        </Sequence>
        <sap2010:WorkflowViewState.IdRef>FlowStep_1</sap2010:WorkflowViewState.IdRef>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <sap2010:WorkflowViewState.IdRef>Flowchart_1</sap2010:WorkflowViewState.IdRef>
    <sads:DebugSymbol.Symbol>d1VDOlxyZXZhdHVyZVxVaXBhdGggUHJvY2Vzc2VzXFByb2plY3RUd29SZXBvc2l0b3J5XEhhbnNlbkJlYXVQcm9qZWN0MlxMb2dpblRvUGVnYS54YW1sMEwD5QEPAgEBTwneARQCAQJQC9wBFgIBA1IPiQEgAgEnkQET1gEeAgEEUqIBUsYBAgE5WBWFASACASiSARXUATACAQVZF2giAgE3aRduJQIBM28XdCcCATF1F3olAgEtexeDASICASmSAXaSAZQBAgEmmAEb0AEmAgEGZaoBZdgBAgE4a6oBa9gBAgE2aYkCaZUCAgE0b9MBb9gBAgEyd6oBd9gBAgEwdZQCdbUCAgEugAGqAYAB2wECASx9Q31HAgErfTZ9OgIBKpkBHaABMQIBIaEBHc4BLQIBB5kBTJkBWQIBJJwBI5wBUgIBI5kBfZkBhQECASKhAU6hAVsCAR+nASPKAS4CAQisASW0AS4CARu1ASW9AS4CARe+ASW+AdABAgESvwElvwGcAgIBDcABJcgBLgIBCbEBULEBfAIBHq4BUa4BbAIBHLoBULoBfAIBGrcBUbcBawIBGL4BPb4BWgIBFb4BjAG+AZoBAgEUvgF+vgGGAQIBE78BPb8BWQIBEL8BiwG/AeYBAgEPvwF9vwGFAQIBDsUBUcUBVQIBDMIBUsIBYgIBCg==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.IdRef>LoginToPega_1</sap2010:WorkflowViewState.IdRef>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="314.4,107.2" />
      <sap2010:ViewStateData Id="TypeInto_1" sap:VirtualizedContainerService.HintSize="314.4,135.2" />
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="314.4,117.6" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314.4,135.2" />
      <sap2010:ViewStateData Id="Click_2" sap:VirtualizedContainerService.HintSize="314.4,107.2" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336.8,887.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="OpenBrowser_1" sap:VirtualizedContainerService.HintSize="414.4,987.2" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="367.2,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_1" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336.8,640.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="367.2,789.6" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="389.6,1014.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="414.4,1124" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="436.8,1248.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="443.2,1319.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="457.6,1484" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="480,1608.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">110,13.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1364.8,636.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">0,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <x:Double x:Key="Width">1350.0000000000002</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">60,40 110,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LoginToPega_1" sap:VirtualizedContainerService.HintSize="1404.8,756.8" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>